1.	Укажите отличия между PHP 5.6 и 7 (как можно больше). Какие из них вы считаете важными и удобными?
    Посколько я не работал с пятой версией совсем, возможно, всех не назову, но могу точно сказать о самой полезной -
    это возможность указывать такие типы входящих параметров функции и возвращаемого значений, как int, bool, string,
    float, array, callable, self(последние три были для параметров были в пятой версии), что делает код более читаемым
    по аналогии с более строгими языками.
    Так же появилась возможность указывать типы рядом со свойствами классов, в версии 7.4, если я все верно помню.
    Оператор "космический корабль" <=>, он возращает -1 если первое выражение меньше второго, 0 если они равны и 1 если второе больше.
    Оператор ??, который заменяет тернарный оператор, где проверка идет через isset.
    Группировка функций и классов из одного namespace в одну строчку через use.
    Так же читал про новую возможность генераторов yield from, т.е. возможность из одного переключиться на другой генератор.
    Всё, что помню)

2.	Чем отличается __autoload от spl_autoload_register?
    Если верно помню, разница в том, что spl_autoload_register работает по принципу стека и таким образом можно загружать несколько автозагрузчиков.

3.	Что такое ECMAScript? Чем он отличается от JavaScript?
    ECMAScript это стандрат для скриптовых языков, а JavaScript это лишь возможная реализация этого стандарта, если я правильно выразился)

4.	Какие типы БД вы знаете? Приведите примеры.
    SQL базы данных, табличные базы с зависимостями, MySQL, MsSQL, PostgreQSL...
    и NoSQL базы, такие как Redis, Elasticsearch.

5.	Для чего нужны составные индексы в БД?
    Не применял их на практике, но сказал бы, что они нужны для запросов где учавствуют одновременно все столбцы из которых состоит индекс.

6.	Практическая задача. Спроектируйте систему новостной ленты по указанным требованиям (нужно создать схему БД, указать необходимые индексы, перечислить стек технологий).
    Как я понял по заданию новсти не деляться на категории.
    Будет несколько таблиц:
        1) Пользователи, id primary key.
        2) Новости, id primary key, индекс на название.
        3) Комментарии, id primary key, foreign key NewsId and UserId.
    Собственно SQL база данных, для новостей, наверное лучше использовать базу данных с полнотекстовым поиском, но лично я с не работал с такими пока.

7.	* Усложнение задачи 6:
    a.	Напишите запрос, который будет отвечать за пагинацию новостей или комментариев.
    b.	Где лучше сортировать выводимые данные – на уровне БД или логики? Почему?
    c.	Сверстайте прототип ленты новостей (без поддержки логики, с AJAX-заглушками).

    SELECT *  FROM news LIMIT 10 -> SELECT *  FROM news LIMIT 10, 10
    SELECT *  FROM comment LIMIT 25 -> SELECT *  FROM comment LIMIT 25, 25

    Я сортирую на уровне БД, ибо возврат миллионов строк, будет явно более плохой идеей, лучше отсортировать там и вернуть небольшое к-во.

 



